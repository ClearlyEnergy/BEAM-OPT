name: Publish Package

on:
  push:
    branches:
      - main

    paths:
      - ".github/workflows/**"
      - ".releaserc.json"
jobs:

  semantic-release:
      runs-on: ubuntu-latest
      outputs:
        release-version: ${{ steps.semantic.outputs.new_release_version }}
        new-release-published: ${{ steps.semantic.outputs.new_release_published }}
      steps:
        - uses: actions/checkout@v4
        - uses: cycjimmy/semantic-release-action@v4
          id: semantic
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    needs: semantic-release
    if: needs.semantic-release.outputs.new-release-published == 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install build
            pip install toml-cli
            pip install twine

      - name: Update pyproject.toml version
        env:
          RELEASE_VERSION: ${{ needs.semantic-release.outputs.release-version }}
        run: |
            toml set --toml-path pyproject.toml project.version ${{ env.RELEASE_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::870817328084:role/publish-github-actions
          role-duration-seconds: 3600

      - name: Build and Publish
        run: |
          export TWINE_USERNAME=aws
          export TWINE_PASSWORD=`aws codeartifact get-authorization-token --domain clearlyenergy --domain-owner 870817328084 --query authorizationToken --output text`
          export TWINE_REPOSITORY_URL=`aws codeartifact get-repository-endpoint --domain clearlyenergy --domain-owner 870817328084 --repository BEAM-OPT --format pypi --query repositoryEndpoint --output text`
          python3 -m build
          twine upload dist/*
